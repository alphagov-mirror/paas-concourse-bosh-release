---
processes:
- name: web
  executable: /var/vcap/packages/concourse/bin/concourse
  args: [web]
  capabilities: [NET_BIND_SERVICE]

  hooks:
    pre_start: /var/vcap/jobs/web/bin/pre_start

  limits:
    open_files: 65536

  env:
    CONCOURSE_METRICS_ATTRIBUTE: <%= "bosh-deployment:#{spec.deployment},bosh-job:#{name}".to_json %>

<%
  if_link("web") do |l|
    web_urls = []
    web.instances.each do |instance|
      web_urls << "http://#{instance.address}:#{web.p("bind_port")}"
    end
-%>
    CONCOURSE_TSA_ATC_URL: <%= web_urls.join(",").to_json %>
<%
  end
-%>

<%
  if p("peer_url", "").empty?
-%>
    CONCOURSE_PEER_URL: http://<%= spec.address %>:<%= p("bind_port") %>
<%
  end
-%>

<%
  if p("external_url", "").empty?
    if_p("tls.bind_port") do |tls_port|
-%>
    CONCOURSE_EXTERNAL_URL: https://<%= spec.address %>:<%= tls_port %>
<%
    end.else do
-%>
    CONCOURSE_EXTERNAL_URL: http://<%= spec.address %>:<%= p("bind_port") %>
<%
    end
  end
-%>

<%
  if p("postgresql.host", "").empty?
    if_link("postgres") do |l|
-%>
    CONCOURSE_POSTGRES_HOST: <%= l.instances.first.address.to_json %>
<%
    end
  end
-%>

<%
  # vim: ft=eruby

  def env_flag(v)
    case v
    when Array
      v.join(",")
    when Hash
      v.collect { |k, v| "#{k}:#{v}" }.join(",")
    else
      v.to_s
    end
  end

  def env_file_flag(v, env)
    case v
    when Array
      v.collect.with_index { |v, i| "/var/vcap/jobs/web/config/env/#{env}_#{i}" }.join(",")
    when Hash
      v.collect { |k, v| "#{k}:/var/vcap/jobs/web/config/env/#{env}_#{k}" }.join(",")
    else
      "/var/vcap/jobs/web/config/env/#{env}"
    end
  end

  def env_windows_file_flag(v, env)
    case v
    when Array
      v.collect.with_index { |v, i| "C:\\var\\vcap\\jobs\\web\\config\\env\\#{env}_#{i}" }.join(",")
    when Hash
      v.collect { |k, v| "#{k}:C:\\var\\vcap\\jobs\\web\\config\\env\\#{env}_#{k}" }.join(",")
    else
      "C:\\var\\vcap\\jobs\\web\\config\\env\\#{env}"
    end
  end
-%>


<% if_p("add_local_users") do |v| -%>
    CONCOURSE_ADD_LOCAL_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("auth_duration") do |v| -%>
    CONCOURSE_AUTH_DURATION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.access_key") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_ACCESS_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.pipeline_secret_template") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_PIPELINE_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.region") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_REGION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.secret_key") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_SECRET_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.session_token") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_SESSION_TOKEN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_secretsmanager.team_secret_template") do |v| -%>
    CONCOURSE_AWS_SECRETSMANAGER_TEAM_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.access_key") do |v| -%>
    CONCOURSE_AWS_SSM_ACCESS_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.pipeline_secret_template") do |v| -%>
    CONCOURSE_AWS_SSM_PIPELINE_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.region") do |v| -%>
    CONCOURSE_AWS_SSM_REGION: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.secret_key") do |v| -%>
    CONCOURSE_AWS_SSM_SECRET_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.session_token") do |v| -%>
    CONCOURSE_AWS_SSM_SESSION_TOKEN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("aws_ssm.team_secret_template") do |v| -%>
    CONCOURSE_AWS_SSM_TEAM_SECRET_TEMPLATE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("baggageclaim_response_header_timeout") do |v| -%>
    CONCOURSE_BAGGAGECLAIM_RESPONSE_HEADER_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("bind_ip") do |v| -%>
    CONCOURSE_BIND_IP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("bind_port") do |v| -%>
    CONCOURSE_BIND_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("build_log_retention.default") do |v| -%>
    CONCOURSE_DEFAULT_BUILD_LOGS_TO_RETAIN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("build_log_retention.maximum") do |v| -%>
    CONCOURSE_MAX_BUILD_LOGS_TO_RETAIN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("build_tracker_interval") do |v| -%>
    CONCOURSE_BUILD_TRACKER_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("cf_auth.api_url") do |v| -%>
    CONCOURSE_CF_API_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("cf_auth.ca_cert.certificate") do |v| -%>
    CONCOURSE_CF_CA_CERT: <%= env_file_flag(v, "CONCOURSE_CF_CA_CERT").to_json %>
<% end -%>

<% if_p("cf_auth.client_id") do |v| -%>
    CONCOURSE_CF_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("cf_auth.client_secret") do |v| -%>
    CONCOURSE_CF_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("container_placement_strategy") do |v| -%>
    CONCOURSE_CONTAINER_PLACEMENT_STRATEGY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("cookie_secure") do |v| -%>
    CONCOURSE_COOKIE_SECURE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("credhub.client_id") do |v| -%>
    CONCOURSE_CREDHUB_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("credhub.client_secret") do |v| -%>
    CONCOURSE_CREDHUB_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("credhub.path_prefix") do |v| -%>
    CONCOURSE_CREDHUB_PATH_PREFIX: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("credhub.tls.ca_cert.certificate") do |v| -%>
    CONCOURSE_CREDHUB_CA_CERT: <%= env_file_flag(v, "CONCOURSE_CREDHUB_CA_CERT").to_json %>
<% end -%>

<% if_p("credhub.tls.client_cert.certificate") do |v| -%>
    CONCOURSE_CREDHUB_CLIENT_CERT: <%= env_file_flag(v, "CONCOURSE_CREDHUB_CLIENT_CERT").to_json %>
<% end -%>

<% if_p("credhub.tls.client_cert.private_key") do |v| -%>
    CONCOURSE_CREDHUB_CLIENT_KEY: <%= env_file_flag(v, "CONCOURSE_CREDHUB_CLIENT_KEY").to_json %>
<% end -%>

<% if_p("credhub.tls.insecure_skip_verify") do |v| -%>
    CONCOURSE_CREDHUB_INSECURE_SKIP_VERIFY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("credhub.url") do |v| -%>
    CONCOURSE_CREDHUB_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("datadog.agent_host") do |v| -%>
    CONCOURSE_DATADOG_AGENT_HOST: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("datadog.agent_port") do |v| -%>
    CONCOURSE_DATADOG_AGENT_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("datadog.prefix") do |v| -%>
    CONCOURSE_DATADOG_PREFIX: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("default_check_interval") do |v| -%>
    CONCOURSE_RESOURCE_CHECKING_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("default_resource_type_check_interval") do |v| -%>
    CONCOURSE_RESOURCE_TYPE_CHECKING_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("default_task_cpu_limit") do |v| -%>
    CONCOURSE_DEFAULT_TASK_CPU_LIMIT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("default_task_memory_limit") do |v| -%>
    CONCOURSE_DEFAULT_TASK_MEMORY_LIMIT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("enable_global_resources") do |v| -%>
    CONCOURSE_ENABLE_GLOBAL_RESOURCES: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("encryption_key") do |v| -%>
    CONCOURSE_ENCRYPTION_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("external_url") do |v| -%>
    CONCOURSE_EXTERNAL_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("gc_interval") do |v| -%>
    CONCOURSE_GC_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.auth_url") do |v| -%>
    CONCOURSE_OAUTH_AUTH_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.ca_cert.certificate") do |v| -%>
    CONCOURSE_OAUTH_CA_CERT: <%= env_file_flag(v, "CONCOURSE_OAUTH_CA_CERT").to_json %>
<% end -%>

<% if_p("generic_oauth.client_id") do |v| -%>
    CONCOURSE_OAUTH_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.client_secret") do |v| -%>
    CONCOURSE_OAUTH_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.display_name") do |v| -%>
    CONCOURSE_OAUTH_DISPLAY_NAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.groups_key") do |v| -%>
    CONCOURSE_OAUTH_GROUPS_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.scopes") do |v| -%>
    CONCOURSE_OAUTH_SCOPE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.token_url") do |v| -%>
    CONCOURSE_OAUTH_TOKEN_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oauth.userinfo_url") do |v| -%>
    CONCOURSE_OAUTH_USERINFO_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.ca_cert.certificate") do |v| -%>
    CONCOURSE_OIDC_CA_CERT: <%= env_file_flag(v, "CONCOURSE_OIDC_CA_CERT").to_json %>
<% end -%>

<% if_p("generic_oidc.client_id") do |v| -%>
    CONCOURSE_OIDC_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.client_secret") do |v| -%>
    CONCOURSE_OIDC_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.display_name") do |v| -%>
    CONCOURSE_OIDC_DISPLAY_NAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.groups_key") do |v| -%>
    CONCOURSE_OIDC_GROUPS_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.issuer") do |v| -%>
    CONCOURSE_OIDC_ISSUER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("generic_oidc.scopes") do |v| -%>
    CONCOURSE_OIDC_SCOPE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("github_auth.ca_cert.certificate") do |v| -%>
    CONCOURSE_GITHUB_CA_CERT: <%= env_file_flag(v, "CONCOURSE_GITHUB_CA_CERT").to_json %>
<% end -%>

<% if_p("github_auth.client_id") do |v| -%>
    CONCOURSE_GITHUB_CLIENT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("github_auth.client_secret") do |v| -%>
    CONCOURSE_GITHUB_CLIENT_SECRET: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("github_auth.host") do |v| -%>
    CONCOURSE_GITHUB_HOST: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.database") do |v| -%>
    CONCOURSE_INFLUXDB_DATABASE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.insecure_skip_verify") do |v| -%>
    CONCOURSE_INFLUXDB_INSECURE_SKIP_VERIFY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.password") do |v| -%>
    CONCOURSE_INFLUXDB_PASSWORD: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.url") do |v| -%>
    CONCOURSE_INFLUXDB_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("influxdb.username") do |v| -%>
    CONCOURSE_INFLUXDB_USERNAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("intercept_idle_timeout") do |v| -%>
    CONCOURSE_INTERCEPT_IDLE_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.bind_dn") do |v| -%>
    CONCOURSE_LDAP_BIND_DN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.bind_pw") do |v| -%>
    CONCOURSE_LDAP_BIND_PW: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.ca_cert.certificate") do |v| -%>
    CONCOURSE_LDAP_CA_CERT: <%= env_file_flag(v, "CONCOURSE_LDAP_CA_CERT").to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_base_dn") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_BASE_DN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_filter") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_FILTER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_group_attr") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_GROUP_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_name_attr") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_NAME_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_scope") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_SCOPE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.group_search_user_attr") do |v| -%>
    CONCOURSE_LDAP_GROUP_SEARCH_USER_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.host") do |v| -%>
    CONCOURSE_LDAP_HOST: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.insecure_no_ssl") do |v| -%>
    CONCOURSE_LDAP_INSECURE_NO_SSL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.insecure_skip_verify") do |v| -%>
    CONCOURSE_LDAP_INSECURE_SKIP_VERIFY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.start_tls") do |v| -%>
    CONCOURSE_LDAP_START_TLS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_base_dn") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_BASE_DN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_email_attr") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_EMAIL_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_filter") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_FILTER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_id_attr") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_ID_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_name_attr") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_NAME_ATTR: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_scope") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_SCOPE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("ldap_auth.user_search_username") do |v| -%>
    CONCOURSE_LDAP_USER_SEARCH_USERNAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("log_db_queries") do |v| -%>
    CONCOURSE_LOG_DB_QUERIES: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("log_level") do |v| -%>
    CONCOURSE_LOG_LEVEL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.cf.orgs") do |v| -%>
    CONCOURSE_MAIN_TEAM_CF_ORG: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.cf.spaces") do |v| -%>
    CONCOURSE_MAIN_TEAM_CF_SPACE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.cf.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_CF_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.github.orgs") do |v| -%>
    CONCOURSE_MAIN_TEAM_GITHUB_ORG: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.github.teams") do |v| -%>
    CONCOURSE_MAIN_TEAM_GITHUB_TEAM: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.github.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_GITHUB_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.ldap.groups") do |v| -%>
    CONCOURSE_MAIN_TEAM_LDAP_GROUP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.ldap.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_LDAP_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.local.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_LOCAL_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.oauth.groups") do |v| -%>
    CONCOURSE_MAIN_TEAM_OAUTH_GROUP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.oauth.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_OAUTH_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.oidc.groups") do |v| -%>
    CONCOURSE_MAIN_TEAM_OIDC_GROUP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("main_team.auth.oidc.users") do |v| -%>
    CONCOURSE_MAIN_TEAM_OIDC_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("newrelic.account_id") do |v| -%>
    CONCOURSE_NEWRELIC_ACCOUNT_ID: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("newrelic.api_key") do |v| -%>
    CONCOURSE_NEWRELIC_API_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("newrelic.service_prefix") do |v| -%>
    CONCOURSE_NEWRELIC_SERVICE_PREFIX: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("old_encryption_key") do |v| -%>
    CONCOURSE_OLD_ENCRYPTION_KEY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("peer_url") do |v| -%>
    CONCOURSE_PEER_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.ca_cert.certificate") do |v| -%>
    CONCOURSE_POSTGRES_CA_CERT: <%= env_file_flag(v, "CONCOURSE_POSTGRES_CA_CERT").to_json %>
<% end -%>

<% if_p("postgresql.client_cert.certificate") do |v| -%>
    CONCOURSE_POSTGRES_CLIENT_CERT: <%= env_file_flag(v, "CONCOURSE_POSTGRES_CLIENT_CERT").to_json %>
<% end -%>

<% if_p("postgresql.client_cert.private_key") do |v| -%>
    CONCOURSE_POSTGRES_CLIENT_KEY: <%= env_file_flag(v, "CONCOURSE_POSTGRES_CLIENT_KEY").to_json %>
<% end -%>

<% if_p("postgresql.connect_timeout") do |v| -%>
    CONCOURSE_POSTGRES_CONNECT_TIMEOUT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.database") do |v| -%>
    CONCOURSE_POSTGRES_DATABASE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.host") do |v| -%>
    CONCOURSE_POSTGRES_HOST: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.port") do |v| -%>
    CONCOURSE_POSTGRES_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.role.name") do |v| -%>
    CONCOURSE_POSTGRES_USER: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.role.password") do |v| -%>
    CONCOURSE_POSTGRES_PASSWORD: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("postgresql.sslmode") do |v| -%>
    CONCOURSE_POSTGRES_SSLMODE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("prometheus.bind_ip") do |v| -%>
    CONCOURSE_PROMETHEUS_BIND_IP: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("prometheus.bind_port") do |v| -%>
    CONCOURSE_PROMETHEUS_BIND_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("riemann.host") do |v| -%>
    CONCOURSE_RIEMANN_HOST: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("riemann.port") do |v| -%>
    CONCOURSE_RIEMANN_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("riemann.service_prefix") do |v| -%>
    CONCOURSE_RIEMANN_SERVICE_PREFIX: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("riemann.tags") do |v| -%>
    CONCOURSE_RIEMANN_TAG: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("syslog.address") do |v| -%>
    CONCOURSE_SYSLOG_ADDRESS: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("syslog.ca_cert.certificate") do |v| -%>
    CONCOURSE_SYSLOG_CA_CERT: <%= env_file_flag(v, "CONCOURSE_SYSLOG_CA_CERT").to_json %>
<% end -%>

<% if_p("syslog.drain_interval") do |v| -%>
    CONCOURSE_SYSLOG_DRAIN_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("syslog.hostname") do |v| -%>
    CONCOURSE_SYSLOG_HOSTNAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("syslog.transport") do |v| -%>
    CONCOURSE_SYSLOG_TRANSPORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tls.bind_port") do |v| -%>
    CONCOURSE_TLS_BIND_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tls.cert.certificate") do |v| -%>
    CONCOURSE_TLS_CERT: <%= env_file_flag(v, "CONCOURSE_TLS_CERT").to_json %>
<% end -%>

<% if_p("tls.cert.private_key") do |v| -%>
    CONCOURSE_TLS_KEY: <%= env_file_flag(v, "CONCOURSE_TLS_KEY").to_json %>
<% end -%>

<% if_p("tls_bind_port") do |v| -%>
    CONCOURSE_TLS_BIND_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("tls_cert") do |v| -%>
    CONCOURSE_TLS_CERT: <%= env_file_flag(v, "CONCOURSE_TLS_CERT").to_json %>
<% end -%>

<% if_p("tls_key") do |v| -%>
    CONCOURSE_TLS_KEY: <%= env_file_flag(v, "CONCOURSE_TLS_KEY").to_json %>
<% end -%>

<% if_p("token_signing_key.private_key") do |v| -%>
    CONCOURSE_SESSION_SIGNING_KEY: <%= env_file_flag(v, "CONCOURSE_SESSION_SIGNING_KEY").to_json %>
<% end -%>

<% if_p("vault.auth.backend") do |v| -%>
    CONCOURSE_VAULT_AUTH_BACKEND: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.auth.client_token") do |v| -%>
    CONCOURSE_VAULT_CLIENT_TOKEN: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.auth.params") do |v| -%>
    CONCOURSE_VAULT_AUTH_PARAM: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.cache") do |v| -%>
    CONCOURSE_VAULT_CACHE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.max_lease") do |v| -%>
    CONCOURSE_VAULT_MAX_LEASE: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.path_prefix") do |v| -%>
    CONCOURSE_VAULT_PATH_PREFIX: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.tls.ca_cert.certificate") do |v| -%>
    CONCOURSE_VAULT_CA_CERT: <%= env_file_flag(v, "CONCOURSE_VAULT_CA_CERT").to_json %>
<% end -%>

<% if_p("vault.tls.client_cert.certificate") do |v| -%>
    CONCOURSE_VAULT_CLIENT_CERT: <%= env_file_flag(v, "CONCOURSE_VAULT_CLIENT_CERT").to_json %>
<% end -%>

<% if_p("vault.tls.client_cert.private_key") do |v| -%>
    CONCOURSE_VAULT_CLIENT_KEY: <%= env_file_flag(v, "CONCOURSE_VAULT_CLIENT_KEY").to_json %>
<% end -%>

<% if_p("vault.tls.insecure_skip_verify") do |v| -%>
    CONCOURSE_VAULT_INSECURE_SKIP_VERIFY: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.tls.server_name") do |v| -%>
    CONCOURSE_VAULT_SERVER_NAME: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("vault.url") do |v| -%>
    CONCOURSE_VAULT_URL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("worker_gateway.authorized_keys") do |v| -%>
    CONCOURSE_TSA_AUTHORIZED_KEYS: <%= env_file_flag(v, "CONCOURSE_TSA_AUTHORIZED_KEYS").to_json %>
<% end -%>

<% if_p("worker_gateway.bind_port") do |v| -%>
    CONCOURSE_TSA_BIND_PORT: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("worker_gateway.heartbeat_interval") do |v| -%>
    CONCOURSE_TSA_HEARTBEAT_INTERVAL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("worker_gateway.host_key.private_key") do |v| -%>
    CONCOURSE_TSA_HOST_KEY: <%= env_file_flag(v, "CONCOURSE_TSA_HOST_KEY").to_json %>
<% end -%>

<% if_p("worker_gateway.log_level") do |v| -%>
    CONCOURSE_TSA_LOG_LEVEL: <%= env_flag(v).to_json %>
<% end -%>

<% if_p("worker_gateway.team_authorized_keys") do |v| -%>
    CONCOURSE_TSA_TEAM_AUTHORIZED_KEYS: <%= env_file_flag(v, "CONCOURSE_TSA_TEAM_AUTHORIZED_KEYS").to_json %>
<% end -%>

<% if_p("x_frame_options") do |v| -%>
    CONCOURSE_X_FRAME_OPTIONS: <%= env_flag(v).to_json %>
<% end -%>

